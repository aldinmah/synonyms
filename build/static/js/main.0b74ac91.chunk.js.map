{"version":3,"sources":["API/index.js","Constants/index.js","API/localDB.js","WordsView/CardList.js","WordsView/TableList.js","AdminView/index.js","MainView/index.js","index.js"],"names":["API_BASE_URL","API_TAGS","meansLike","synonyms","selectedWord","a","fetch","response","json","results","wordCollection","promises","map","item","word","Promise","all","then","r","values","index","baseWord","wordRelatedSynonyms","wordsSynonymsSet","retriveSynonyms","getRelatedSynonyms","WORDS_STORAGE_NAME","RESULTS_LAYOUT","DATA_SOURCE","saveDataToStorage","data","localStorage","setItem","JSON","stringify","loadDataFromStorage","wordData","getItem","parse","clearDataFromStorage","removeItem","getSynonymsForWord","collection","synonymList","forEach","syn_for","includes","toLowerCase","approved","push","getBaseSynonyms","baseSynonym","text","score","getWordObjectByText","transitiveSyn","transitiveWord","getTransitiveWordByText","console","log","words","some","el","checkIfWordExists","CardList","props","className","Accordion","defaultActiveKey","Card","Toggle","as","Header","eventKey","synonymsData","length","Collapse","Body","synonymItem","type","data-tip","data-for","id","numberOfTransitiveSynonyms","parentIndex","relatedWord","place","createChildRows","itemIndex","colSpan","createRow","tableRowID","columns","cells","i","xmlns","width","height","viewBox","points","data-toggle","data-target","aria-expanded","Date","now","renderExpandableRows","rows","TableList","AdminView","useState","filterNotApprovedSynonyms","localDBData","notApprovedSynonyms","setNotApprovedSynonyms","showMessage","setShowMessage","notApproved","useEffect","onClick","scope","syn","syInd","notApprovedNew","indexOf","splice","approveWordInDB","guid","setTimeout","approveWord","MainView","setSelectedWord","newSynonym","setNewSynonym","setSynonymsData","setNumberOfTransitiveSynonyms","activeLayout","setActiveLayout","initLoad","setInitLoad","loading","setLoading","synonymAdded","setSynonymAdded","localDB","setLocalDBData","dataSource","setDataSource","showAddSynonymBox","setShowAddSynonymBox","adminViewActive","setAdminViewActive","retriveSynonym","numTransitiveSyn","approvedResults","filter","API","relatedWords","replace","c","Math","random","toString","addNewSynonym","dbData","itemExist","isNewWord","src","alt","Carousel","activeIndex","controls","indicators","wrap","Item","ButtonGroup","toggle","ToggleButton","name","value","checked","onChange","e","target","placeholder","onKeyDown","key","version","x","y","enableBackground","transform","d","disabled","fill","role","wordGuid","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b74ac91.chunk.js","sourcesContent":["const API_BASE_URL = 'https://api.datamuse.com/words?'\nconst API_TAGS = {\n    meansLike: 'ml=',\n    synonyms: 'rel_syn='\n}\nasync function retriveSynonyms(selectedWord) {\n    const response = await fetch(API_BASE_URL + API_TAGS.synonyms + selectedWord, {\n        \"method\": \"GET\",\n    })\n    const results = await response.json()\n    return results;\n}\nasync function getRelatedSynonyms(wordCollection) {\n    const promises = wordCollection.map(item => {        \n        return fetch(API_BASE_URL + API_TAGS.synonyms + item.word)\n    });\n    const wordsSynonymsSet = await Promise.all(promises).then(results => {\n        return Promise.all(results.map(r=>r.json()))\n    }).then(values=>{\n        const relatedSynonyms = wordCollection.map((word,index)=>{\n            return {baseWord : word, wordRelatedSynonyms : values[index]}\n        })\n        return relatedSynonyms\n    });\n    return wordsSynonymsSet\n}\nexport default {\n    API_BASE_URL,\n    API_TAGS,\n    retriveSynonyms,\n    getRelatedSynonyms\n};\n","export const WORDS_STORAGE_NAME = \"word_data_db\"\n\nexport const GENERAL_ERROR_MESSAGE = 'Something went wrong.'\nexport const LOADING_WITH_DOTS = 'Loading...'\nexport const SYNONYM_ADDED_MESSAGE = 'Synonym successfully submited. Administration will review your suggestion.'\nexport const SYNONYM_APPROVED_MESSAGE = 'Synonym successfully approved.'\nexport const NO_SYNOYMS_FOUND_MESSAGE = 'No synonyms found, please search for another word'\nexport const RESULTS_LAYOUT = {\n    CARDS:1,\n    TABLE:2\n}\nexport const DATA_SOURCE = {\n    API:\"API\",\n    LOCAL:\"LOCAL\"\n}","import { WORDS_STORAGE_NAME } from \"../Constants\"\n\nfunction saveDataToStorage(data) {\n    localStorage.setItem(WORDS_STORAGE_NAME, JSON.stringify(data));\n}\nfunction loadDataFromStorage() {\n    let wordData = localStorage.getItem(WORDS_STORAGE_NAME);\n    if (wordData !== 'undefined' && wordData)\n        wordData = JSON.parse(wordData)\n    else\n        wordData = []\n\n    return wordData;\n}\nfunction clearDataFromStorage() {\n    localStorage.removeItem(WORDS_STORAGE_NAME);\n}\nfunction getTransitiveWordByText(text, collection) {    \n    let word = { word: '', score: '',approved: false}\n    collection.forEach((baseWord) => {\n        if (baseWord.word.toLowerCase() == text.toLowerCase()) {\n            word = baseWord\n        }\n        else {\n            word.word = text\n            word.score = 'N/A'\n        }\n    });\n    return word;\n}\nfunction getWordObjectByText(text, collection) {\n    let word = { baseWord: { word: '', score: '' }, wordRelatedSynonyms: [], approved: false, syn_for: [] }\n    collection.forEach((baseWord) => {\n        if (baseWord.word.toLowerCase() === text.toLowerCase()) {\n            word.baseWord = baseWord\n            word.approved = baseWord.approved\n        }\n        else {\n            word.baseWord.word = text\n            word.baseWord.score = 'N/A'\n        }\n    });\n    return word;\n}\nfunction checkIfWordExists(words, word) {\n    return words.some(function (el) {\n        return el.baseWord.word === word;\n    });\n}\nfunction getBaseSynonyms(word, collection) {\n    let results = [];\n    collection.forEach((baseWord) => {\n        if (word.toLowerCase() === baseWord.word.toLowerCase()) {\n            baseWord.syn_for.forEach((item) => {\n                let baseSynonym = getWordObjectByText(item, collection);\n                if (baseSynonym.baseWord.syn_for) {\n                    baseSynonym.baseWord.syn_for.forEach((transitiveSyn) => {\n                        if (transitiveSyn.toLowerCase() !== baseWord.word.toLowerCase()){\n                            let transitiveWord = getTransitiveWordByText(transitiveSyn, collection)\n                            console.log('my transitive word');\n                            console.log(transitiveWord);\n                            \n                            if(transitiveWord.approved)\n                                baseSynonym.wordRelatedSynonyms.push(transitiveWord)\n                        }\n                            \n                    });\n                }\n                if (!checkIfWordExists(results, baseSynonym.baseWord.word))\n                    results.push(baseSynonym)\n            });\n        }\n    });\n    return results;\n}\nfunction getSynonymsForWord(word, collection) {\n    let synonymList = []\n    collection.forEach((item) => {\n        if ((item.syn_for.includes(word.toLowerCase()) && item.approved) || word.toLowerCase() === item.word.toLowerCase())\n            synonymList.push(item);\n    });\n    return synonymList;\n}\nexport default {\n    saveDataToStorage,\n    loadDataFromStorage,\n    clearDataFromStorage,\n    getSynonymsForWord,\n    getBaseSynonyms\n};\n","import { Accordion, Card } from 'react-bootstrap'\nimport ReactTooltip from \"react-tooltip\";\n\nfunction CardList(props) {\n    return (\n        <div className=\"result-set accordion-wrapper col-12 text-left p-0 \">\n            <Accordion className=\"col-12 text-left p-0\" defaultActiveKey=\"0\">\n                <Card className=\"result-box first-level-results\">\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                        <span className=\"result-title\">\n                            Synonyms\n                                    <span className=\"results-number float-right\">\n                                {!props.synonymsData.length ? 'No results found' : (props.synonymsData.length + \" results found\")}\n                            </span>\n                        </span>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body className=\"col-12 float-left\">\n                            <ul className=\"synonyms-items col-12 p-0 float-left\">\n                                {props.synonymsData.map((synonymItem, index) => (\n                                    <li className=\"word-item mx-2 my-1\" key={`syn_ ${index}`}>\n                                        <button type=\"button\" data-tip data-for={`tooltip_syn_${index}`}> {synonymItem.baseWord.word} </button>\n                                        <ReactTooltip id={`tooltip_syn_${index}`} type=\"info\" >\n                                            <span>Number of transitive synonyms <strong>{synonymItem.wordRelatedSynonyms.length}</strong></span>\n                                        </ReactTooltip>\n                                    </li>\n                                ))}\n                            </ul>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n            <Accordion className=\"col-12 text-left p-0\">\n                <Card className=\"result-box second-level-results\">\n                    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                        <span className=\"result-title\">\n                            Transitive synonyms\n                                    <span className=\"results-number float-right\">\n                                {!props.numberOfTransitiveSynonyms ? \"No results found\" : (props.numberOfTransitiveSynonyms + \" results found\")}\n                            </span>\n                        </span>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"1\">\n                        <Card.Body className=\"col-12 float-left\">\n                            <ul className=\"synonyms-items col-12 p-0 float-left\">\n                                {props.synonymsData.map((synonymItem,parentIndex) => (\n                                    synonymItem.wordRelatedSynonyms.map((relatedWord, index) => (\n                                        <li className=\"word-item mx-2 my-1\" key={`rel_ ${index}_${parentIndex}`}>\n                                            <button type=\"button\" data-tip data-for={`tooltip_t_${index}_${parentIndex}`}> {relatedWord.word} </button>\n                                            <ReactTooltip place=\"top\" id={`tooltip_t_${index}_${parentIndex}`} type=\"info\">\n                                                <span>Synonym from <strong>{synonymItem.baseWord.word}</strong></span>\n                                            </ReactTooltip>\n                                        </li>\n                                    ))\n                                ))}\n                            </ul>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        </div>\n    )\n}\n\nexport default CardList;","import \"bootstrap/js/src/collapse.js\";\n\nfunction createChildRows(word,itemIndex) {    \n    return (\n    <tr key={itemIndex+\"_row\"}>\n        <td colSpan=\"5\" className=\"hiddenRow\">\n            <div className=\"accordian-body collapse p-2\" id={\"word_\"+itemIndex}>\n            {word.wordRelatedSynonyms.length>0 &&\n                word.wordRelatedSynonyms.map((relatedWord, index) => (\n                    <span key={`rel_ ${index}`}>{relatedWord.word}{(index===(word.wordRelatedSynonyms.length-1))?\"\":\",\"} </span> \n                ))\n            }\n            {word.wordRelatedSynonyms.length===0 && \n                <span className=\"alert alert-info d-flex m-0\">No transitive synonyms found.</span> \n            }\n            </div>\n        </td>\n    </tr>);\n \n}\nfunction createRow(tableRowID, data, columns, cells = []) {     \n    for (let i in columns) {\n        if(i==0)\n            cells.push(<td key={tableRowID+\"_\"+i}>{tableRowID+1}</td>)\n        else if(i==1)\n            cells.push(<td key={tableRowID+\"_\"+i}>{data.baseWord.word}</td>)\n        else if(i==2)\n            cells.push(<td key={tableRowID+\"_\"+i}>{data.baseWord.score?data.baseWord.score:\"N/A\"}</td>)\n        else if(i==3)\n            cells.push(<td key={tableRowID+\"_\"+i}>{data.wordRelatedSynonyms.length}</td>)\n        else if(i==4)\n            cells.push(<td className=\"controls text-center\" key={tableRowID+\"_\"+i}><svg className=\"icon-expand\" xmlns=\"http://www.w3.org/2000/svg\" width=\"306px\" height=\"306px\" viewBox=\"0 0 306 306\"><g><polygon points=\"270.3,58.65 153,175.95 35.7,58.65 0,94.35 153,247.35 306,94.35\"/></g></svg><svg className=\"icon-collapse\" xmlns=\"http://www.w3.org/2000/svg\" width=\"306px\" height=\"306px\" viewBox=\"0 0 306 306\"><g><polygon points=\"153,58.65 0,211.65 35.7,247.35 153,130.05 270.3,247.35 306,211.65\"/></g></svg></td>)\n    }\n    \n    return (<tr data-toggle=\"collapse\" className=\"accordion-toggle\" data-target={`#word_${tableRowID}`} aria-expanded=\"false\" key={Date.now()+tableRowID+\"_row\"}>{cells}</tr>);\n  }\nfunction renderExpandableRows(props) {\n    let rows = []\n    for(let i=0;i<props.synonymsData.length;i++){\n        rows.push(createRow(i,props.synonymsData[i],['#','Synonym',\"Description\",\"# of synonyms\",\"\"]))\n        rows.push(createChildRows(props.synonymsData[i],i))\n    }\n   return rows\n}\n\nfunction TableList(props) {\n    \n    return (\n        <table className=\"result-set table table-condensed\">\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Synonym</th>\n                    <th>Description/Score</th>\n                    <th className=\"w-30\"># of Transitive Synonyms</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {renderExpandableRows(props)}\n            </tbody>\n        </table>\n    )\n}\n\nexport default TableList;","import React, { useState, useEffect } from 'react';\nimport { SYNONYM_APPROVED_MESSAGE } from '../Constants'\n\nfunction AdminView(props) {\n    const [notApprovedSynonyms, setNotApprovedSynonyms] = useState(filterNotApprovedSynonyms(props.localDBData));\n    const [showMessage, setShowMessage] = useState(false);\n\n    useEffect(() => {\n        setNotApprovedSynonyms(filterNotApprovedSynonyms(props.localDBData))\n    }, [props.localDBData])\n\n    function filterNotApprovedSynonyms(collection) {\n        let notApproved = []\n        if (collection.length) {\n            collection.map(function (word) {\n                if (!word.approved) notApproved.push(word)\n            })\n        }\n        return notApproved\n    }\n    function approveWord(word) {\n        var notApprovedNew = [...notApprovedSynonyms];\n        var index = notApprovedNew.indexOf(word)\n        if (index !== -1) {\n            notApprovedNew.splice(index, 1)\n            setNotApprovedSynonyms(notApprovedNew)\n        }\n        props.approveWordInDB(word.guid)\n        setShowMessage(true)\n        setTimeout(() => {\n            setShowMessage(false)\n        }, 5000);\n    }\n\n    return (\n        <div className=\"admin-view-wrapper col-12 text-left p-0 m-0\">\n            {showMessage &&\n                <span onClick={() => { setShowMessage(!showMessage) }}\n                    className=\"position-fixed float-left d-inline-block alert alert-success text-center syn-approved-message\">{SYNONYM_APPROVED_MESSAGE}</span>\n            }\n            <h4 className=\"col-12 py-3 m-0 admin-heading\">Admin panel - synonyms approval <span className=\"num-of-approval float-right\">{notApprovedSynonyms.length} items</span></h4>\n            {notApprovedSynonyms.length>0 &&\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Word</th>\n                            <th scope=\"col\">Description/Score</th>\n                            <th scope=\"col\">Synonym for word</th>\n                            <th scope=\"col\"></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {notApprovedSynonyms.length > 0 && notApprovedSynonyms.map(function (item, index) {\n                            return <tr key={'tr+' + item + index}>\n                                <th scope=\"row\">{index + 1}</th>\n                                <td>{item.word}</td>\n                                <td>{item.score}</td>\n                                <td>{item.syn_for.map(function (syn, syInd) {\n                                    return <span key={\"tsyn_\" + syn + syInd}>{syn}{(syInd === item.syn_for.length || item.syn_for.length === 1) ? \"\" : \", \"}</span>\n                                })}</td>\n                                <td><button type=\"button\" className=\"btn btn-success approve-button\" onClick={() => { approveWord(item) }}>Approve</button></td>\n                            </tr>\n                        })}\n                    </tbody>\n                </table>\n            }\n            {notApprovedSynonyms.length===0 &&\n                <span className=\"alert alert-warning no-results text-center row m-0 no-approved-list\">There are no requests for approval.</span>\n            }\n        </div>\n    )\n}\n\nexport default AdminView;","import React, { useState, useEffect } from 'react';\nimport API from '../API'\nimport localDB from '../API/localDB'\nimport { DATA_SOURCE, RESULTS_LAYOUT, LOADING_WITH_DOTS, SYNONYM_ADDED_MESSAGE, NO_SYNOYMS_FOUND_MESSAGE } from '../Constants'\nimport CardList from '../WordsView/CardList'\nimport TableList from '../WordsView/TableList'\nimport AdminView from '../AdminView'\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Carousel from 'react-bootstrap/Carousel'\n\nfunction MainView(props) {\n\n    const [selectedWord, setSelectedWord] = useState(\"\")\n    const [newSynonym, setNewSynonym] = useState(\"\")\n    const [synonymsData, setSynonymsData] = useState([])\n    const [numberOfTransitiveSynonyms, setNumberOfTransitiveSynonyms] = useState(0)\n    const [activeLayout, setActiveLayout] = useState(RESULTS_LAYOUT.CARDS)\n    const [initLoad, setInitLoad] = useState(true)\n    const [loading, setLoading] = useState(false)\n    const [synonymAdded, setSynonymAdded] = useState(false)\n    const [localDBData, setLocalDBData] = useState(localDB.loadDataFromStorage())\n    const [dataSource, setDataSource] = useState('LOCAL')\n    const [showAddSynonymBox,setShowAddSynonymBox] = useState(false)\n    const [adminViewActive, setAdminViewActive] = useState(0);\n\n    useEffect(() => {    \n       localDB.saveDataToStorage(localDBData)\n    }, [localDBData]);\n\n    function retriveSynonym() {\n        setLoading(true)\n        if (dataSource === DATA_SOURCE.LOCAL) {\n            let results = localDB.getBaseSynonyms(selectedWord, localDBData)\n            let numTransitiveSyn = 0\n            let approvedResults = results.filter(function(item){\n                return item.approved === true\n               });\n               \n            approvedResults.map((item) => {\n                return numTransitiveSyn += item.wordRelatedSynonyms.length\n            });\n            console.log(approvedResults);\n            \n            setNumberOfTransitiveSynonyms(numTransitiveSyn)\n            setSynonymsData(approvedResults)\n            setLoading(false)\n        } else {\n            API.retriveSynonyms(selectedWord).then(words => {\n                API.getRelatedSynonyms(words).then(relatedWords => {\n                    let numTransitiveSyn = 0;\n                    relatedWords.map((item) => {\n                        return numTransitiveSyn += item.wordRelatedSynonyms.length\n                    });\n                    setNumberOfTransitiveSynonyms(numTransitiveSyn)\n                    setSynonymsData(relatedWords)\n                    setLoading(false)\n                });\n            });\n        }\n        if (initLoad)\n            setInitLoad(false)\n    }\n    \n    function guid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n          var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n          return v.toString(16);\n        });\n    }\n    function approveWordInDB(wordGuid) {\n        let dbData = [...localDBData]\n        dbData.forEach(function (item) {\n            if(item.guid==wordGuid){\n                item.approved = true;\n            }\n        })\n        localDB.saveDataToStorage(dbData)\n        setLocalDBData(dbData)\n    }\n    function addNewSynonym() {\n        let dbData = [...localDBData]\n        let itemExist = false\n        let isNewWord = true\n        dbData.forEach(function (item) {\n           if (item.word.toLowerCase() === selectedWord.toLowerCase()) {\n                itemExist = true\n                isNewWord = false\n                if (!item.syn_for.includes(newSynonym.toLowerCase())) {\n                    isNewWord = true\n                    item.syn_for.push(newSynonym)\n                }\n            }\n        })\n        \n        if(!itemExist){\n            let wordData = {\n                guid: guid(),\n                word: selectedWord,\n                score: 'N/A',\n                approved: false,\n                syn_for: [newSynonym.toLowerCase()]\n            }\n            dbData.push(wordData)\n        }\n        if(isNewWord){\n            let wordData = {\n                guid: guid(),\n                word: newSynonym,\n                score: 'N/A',\n                approved: false,\n                syn_for: [selectedWord.toLowerCase()]\n            }\n            dbData.push(wordData)\n        }\n        setSynonymAdded(true)\n        setLocalDBData(dbData)\n        setNewSynonym('')\n        setTimeout(() => {\n            setSynonymAdded(false)\n        }, 5000);\n    }\n    \n    return (\n        <div className=\"main-view-wrapper d-flex w-100 h-100 p-0 mx-auto flex-column\">\n            <div className=\"header-wrapper mb-4\">\n                <div className=\"header-content col-12 col-md-6 offset-md-3 py-2 px-0 float-left\">\n                    <div className=\"logo-wrapper float-left\">\n                        <img className=\"logo\" src=\"/assets/images/logo.png\" alt=\"logo\" />\n                    </div>\n                    <div className=\"admin-box float-right\">\n                        <button type=\"button\" className=\"admin-button\" onClick={()=>{\n                            setAdminViewActive(adminViewActive?0:1);\n                            setSelectedWord('');\n                        }}>{!adminViewActive?\"Administration\":\"Back\"}</button>    \n                    </div>\n                </div>\n            </div>\n            \n            <div className=\"content-view text-center p-0 mb-4\">\n            <Carousel \n                activeIndex={adminViewActive} \n                controls={false}\n                indicators={false}\n                wrap={false}\n            >\n                <Carousel.Item>\n                {synonymAdded &&\n                    <span onClick={()=>{setSynonymAdded(!synonymAdded)}}\n                        className=\"position-fixed float-left d-inline-block alert alert-success text-center syn-added-message\">{SYNONYM_ADDED_MESSAGE}</span>\n                }\n                <div className=\"search-box m-y-1 p-3\">\n                    <div className=\"controls-wrapper col-12 row m-0 p-0 mb-2\">\n                        <div className=\"source-box col-12 float-left text-left p-0\">\n                            <div className=\"col-12 p-0\">\n                                <span className=\"source-label\">Data source</span>\n                                <ButtonGroup toggle>\n                                    <ToggleButton\n                                        className=\"btn btn-light\"\n                                        key=\"rb-source-api\"\n                                        type=\"radio\"\n                                        name=\"datasource\"\n                                        value={DATA_SOURCE.API}\n                                        checked={dataSource === DATA_SOURCE.API}\n                                        onChange={e => {\n                                            setDataSource(e.target.value);\n                                            setSelectedWord('');\n                                            setSynonymsData([]);\n                                            setInitLoad(true);\n                                        }}\n                                    >\n                                        API (Datamuse)\n                                    </ToggleButton>\n                                    <ToggleButton\n                                        className=\"btn btn-light\"\n                                        key=\"rb-source-local\"\n                                        type=\"radio\"\n                                        name=\"datasource\"\n                                        value={DATA_SOURCE.LOCAL}\n                                        checked={dataSource === DATA_SOURCE.LOCAL}\n                                        onChange={e => {\n                                            setDataSource(e.target.value);\n                                            setSelectedWord('');\n                                            setSynonymsData([]);\n                                            setInitLoad(true);\n                                        }}\n                                    >\n                                        Local Storage\n                                    </ToggleButton>\n                                </ButtonGroup>\n                            </div> \n                        </div>\n                    </div>\n                    <div className=\"row px-3\">\n                        <div className=\"input-wrapper col-12 col-md-8 m-y-1 p-0\">\n                            <input\n                                type=\"text\"\n                                className=\"standard-input col-12 search-input\"\n                                placeholder=\"Search for word synonyms\"\n                                value={selectedWord}\n                                onChange={e => {\n                                    setSelectedWord(e.target.value)\n                                }}\n                                onKeyDown={e => {\n                                    if (e.key === 'Enter' && selectedWord)\n                                        retriveSynonym()\n                                }}\n                            />\n                            <button type=\"button\" onClick={retriveSynonym} className=\"input-icon loop-icon\">\n                                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 1000 1000\" enableBackground=\"new 0 0 1000 1000\"><g><g transform=\"translate(0.000000,511.000000) scale(0.100000,-0.100000)\"><path d=\"M2906.9,4986.5c-728.2-131.8-1320.2-437.8-1831.8-951.6c-480.3-478.1-788.6-1045.5-931.5-1720.1c-58.1-270.3-58.1-1025.4,0-1295.7C398.2-176.1,1249.3-1141.1,2379.7-1514.2c377.5-125.1,592-156.4,1063.3-156.4c366.4,0,471.4,6.7,663.5,49.2c402.1,87.1,815.4,254.7,1121.4,451.3l129.6,84.9l440.1-440.1l437.8-437.8v-149.7c0-167.5,55.8-370.8,140.7-513.8c31.3-53.6,491.5-529.4,1025.4-1058.9c893.6-889.1,978.5-967.3,1112.5-1025.4c174.2-76,469.1-102.8,643.4-55.8c348.5,96.1,623.3,370.8,719.3,719.3c46.9,174.2,20.1,469.1-55.8,643.4c-58.1,134-136.3,218.9-1025.4,1112.5c-529.4,533.9-1005.3,994.1-1058.9,1025.4c-143,84.9-346.2,140.7-513.8,140.7h-149.7l-437.8,437.8l-440.1,440.1l84.9,129.6c196.6,306.1,364.1,719.3,451.3,1121.4c71.5,328.4,71.5,996.3,0,1324.7c-292.7,1347.1-1275.6,2336.7-2618.2,2633.8C3885.4,5013.3,3139.3,5026.7,2906.9,4986.5z M4035,4001.4C5127.5,3688.6,5833.4,2716.9,5782,1599.9C5723.9,362.3,4747.7-613.9,3510.1-672c-949.4-42.5-1814,469.1-2236.1,1322.5c-198.8,406.6-272.5,797.5-239,1275.6c60.3,819.9,600.9,1588.3,1364.9,1941.3C2898,4097.4,3519,4148.8,4035,4001.4z\" /></g></g></svg>\n                            </button>\n\n\n                            {selectedWord && dataSource===DATA_SOURCE.LOCAL &&\n                                <div className=\"add-synonym-field-box\">\n                                    <button \n                                        className=\"font-italic link-button my-1 p-0\" \n                                        type=\"button\"\n                                        onClick={()=>{setShowAddSynonymBox(!showAddSynonymBox)}}\n                                        >\n                                            Add new synonym for <strong>{selectedWord}</strong>\n                                    </button>\n                                    <div className={`col-12 add-synonym-wrapper p-0 float-left ${(showAddSynonymBox) ? \"\" : \"hide-box\"}`}>\n                                        <input\n                                            type=\"text\"\n                                            className=\"standard-input col-8 float-left\"\n                                            placeholder=\"Add synonym\"\n                                            value={newSynonym}\n                                            onChange={e => {\n                                                setNewSynonym(e.target.value)\n                                            }}\n                                            onKeyDown={e => {\n                                                if (e.key === 'Enter' && selectedWord)\n                                                    addNewSynonym()\n                                            }}\n                                        />\n                                        <button type=\"button\" onClick={addNewSynonym} className=\"add-syn-btn float-left\" disabled={newSynonym ? false : true}>\n                                            Submit\n                                        </button>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                        <div className=\"layout-control col-12 col-md-4 text-right pr-0\">\n\n                            <button type=\"button\" className={`layout-button cards-layout ${(activeLayout === 1) ? \"active\" : \"\"}`} onClick={() => setActiveLayout(RESULTS_LAYOUT.CARDS)}>\n                                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\" enableBackground=\"new 0 0 1000 1000\"><g><path d=\"M61.6,10h154.7c28.5,0,51.6,23.1,51.6,51.6v154.8c0,28.5-23.1,51.6-51.6,51.6H61.6c-28.5,0-51.6-23.1-51.6-51.6V61.6C10,33.1,33.1,10,61.6,10z\" /><path d=\"M422.6,10h154.7c28.5,0,51.6,23.1,51.6,51.6v154.8c0,28.5-23.1,51.6-51.6,51.6H422.6c-28.5,0-51.6-23.1-51.6-51.6V61.6C371.1,33.1,394.2,10,422.6,10z\" /><path d=\"M783.7,10h154.7c28.5,0,51.6,23.1,51.6,51.6v154.8c0,28.5-23.1,51.6-51.6,51.6H783.7c-28.5,0-51.6-23.1-51.6-51.6V61.6C732.1,33.1,755.2,10,783.7,10z\" /><path d=\"M783.7,371.1h154.7c28.5,0,51.6,23.1,51.6,51.6v154.7c0,28.5-23.1,51.6-51.6,51.6H783.7c-28.5,0-51.6-23.1-51.6-51.6V422.6C732.1,394.1,755.2,371.1,783.7,371.1z\" /><path d=\"M422.6,371.1h154.7c28.5,0,51.6,23.1,51.6,51.6v154.7c0,28.5-23.1,51.6-51.6,51.6H422.6c-28.5,0-51.6-23.1-51.6-51.6V422.6C371.1,394.1,394.2,371.1,422.6,371.1z\" /><path d=\"M61.6,371.1h154.7c28.5,0,51.6,23.1,51.6,51.6v154.7c0,28.5-23.1,51.6-51.6,51.6H61.6C33.1,629,10,605.9,10,577.4V422.6C10,394.1,33.1,371.1,61.6,371.1z\" /><path d=\"M61.6,732.1h154.7c28.5,0,51.6,23.1,51.6,51.6v154.7c0,28.4-23.1,51.6-51.6,51.6H61.6C33.1,990,10,966.9,10,938.4V783.7C10,755.2,33.1,732.1,61.6,732.1z\" /><path d=\"M422.6,732.1h154.7c28.5,0,51.6,23.1,51.6,51.6v154.7c0,28.4-23.1,51.6-51.6,51.6H422.6c-28.5,0-51.6-23.1-51.6-51.6V783.7C371.1,755.2,394.2,732.1,422.6,732.1z\" /><path d=\"M783.7,732.1h154.7c28.5,0,51.6,23.1,51.6,51.6v154.7c0,28.4-23.1,51.6-51.6,51.6H783.7c-28.5,0-51.6-23.1-51.6-51.6V783.7C732.1,755.2,755.2,732.1,783.7,732.1z\" /></g></svg>\n                            </button>\n                            <span className=\"std-label white\"> / </span>\n                            <button type=\"button\" className={`layout-button table-layout ${(activeLayout === 2) ? \"active\" : \"\"}`} onClick={() => setActiveLayout(RESULTS_LAYOUT.TABLE)}>\n                                <svg height=\"48\" viewBox=\"0 0 48 48\" width=\"48\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8 28h8v-8h-8v8zm0 10h8v-8h-8v8zm0-20h8v-8h-8v8zm10 10h24v-8h-24v8zm0 10h24v-8h-24v8zm0-28v8h24v-8h-24z\" /><path d=\"M0 0h48v48h-48z\" fill=\"none\" /></svg>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"result-wrapper col-12 text-left p-0\">\n                    {loading &&\n                        <div className=\"spinner-container p-5 p-y-3 text-center\">\n                            <div className=\"spinner-border\">\n                                <span className=\"sr-only\">{LOADING_WITH_DOTS}</span>\n                            </div>\n                        </div>\n                    }\n                    {synonymsData.length === 0 && !initLoad && !loading &&\n                        <div className=\"alert alert-warning no-results text-center row m-0\" role=\"alert\">\n                            <span className=\"col-12 alert-text-row text-left my-2 pl-0\">{NO_SYNOYMS_FOUND_MESSAGE}</span>\n                            {dataSource===DATA_SOURCE.LOCAL &&\n                                <div className=\"col-12 m-0 p-0 row\">\n                                    <span className=\"col-12 alert-text-row text-left mb-1 pl-0\">or add a new synonym for <span className=\"alert-syn-word\">{selectedWord}</span></span>\n                                    <div className=\"col-12 add-synonym-wrapper p-0\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"standard-input col-8 float-left\"\n                                            placeholder=\"Add synonym\"\n                                            value={newSynonym}\n                                            onChange={e => {\n                                                setNewSynonym(e.target.value)\n                                            }}\n                                            onKeyDown={e => {\n                                                if (e.key === 'Enter' && selectedWord)\n                                                    addNewSynonym()\n                                            }}\n                                        />\n                                        <button type=\"button\" onClick={addNewSynonym} className=\"add-syn-btn float-left\" disabled={newSynonym ? false : true}>\n                                            Submit\n                                        </button>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                    }\n                    {(initLoad || synonymsData.length !== 0) && !loading &&\n                        <div>\n                            {activeLayout === 1 &&\n                                <CardList synonymsData={synonymsData} numberOfTransitiveSynonyms={numberOfTransitiveSynonyms} />\n                            }\n                            {activeLayout === 2 &&\n                                <TableList synonymsData={synonymsData} numberOfTransitiveSynonyms={numberOfTransitiveSynonyms} />\n                            }\n                        </div>\n                    }\n                </div>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <AdminView localDBData={localDBData} approveWordInDB={approveWordInDB}/>\n                </Carousel.Item>\n            </Carousel>\n                \n            </div>\n\n           \n            <div className=\"footer-wrapper mt-auto text-center\">\n                <div className=\"footer-content col-12 col-md-6 offset-md-3 py-2\">\n                    <span>Lorem ipsum</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MainView;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainView from './MainView';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './main.css';\n\nfunction App() {\n    return (\n        <MainView />\n    );\n}\n\nReactDOM.render(<App />, document.getElementById(\"synonym-root\"));\n"],"sourceRoot":""}